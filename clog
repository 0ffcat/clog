#!/usr/bin/perl
# Tag Added:      25-06-2020
# Archived Repo:  16-08-2022

use Switch;
use Cwd qw();
use Text::Markdown 'markdown';
use File::Slurp;
use Time::Piece;
my $curdir = Cwd::cwd();

my $ar = shift(@ARGV);
switch($ar) {
  case "add"          { add(); }
  case "publish"      { publish(); }
  case "update"       { updateindex(); }
  case "updateall"    { updateglob(); }
  else                { print "Use this command with ./clog add" }
}

sub add {
  print "What would you like to call your post? ";
  my $postname = <STDIN>;
  chomp $postname;

# TODO: Print this to file.
  print "The post title is '$postname'\n";
  $postname =~ tr/ /-/;
  $postname = lc($postname);
  print "The URL will (when published) be '/posts/$postname.html'\n";

# Open File In VIM
  `vim -o "$curdir/posts/drafts/$postname.markdown" >/dev/tty`;
}

sub publish {
  print "The posts you can publish are...\n";

  my $fold     = 'posts/drafts';
  my @filelist = listfolder($fold);

# Select File
  print "\nWhich of the above would you like the publish (please enter the corresponding number)? ";
  my $choice = <STDIN>;

  #print "You chose @filelist[$choice]";
  html2mkdn($filelist[$choice]);
}

sub listfolder {
  my @filelist = "";
  my $ftl   = $_[0]; # Input folder to list
  my $counter   = 1;
  opendir (DIR, $ftl) or die $!;
  while (my $file = readdir(DIR)) {
    my $flen = length $file;
    if ($flen > 3) {
      print "  $counter)  $file\n";
      push(@filelist, "$file");
      $counter = $counter + 1;
    }
  }
  return @filelist;
}

sub html2mkdn {
# File URL and Add Date if no date already
  my $file = $_[0] =~ s/\.markdown/\.html/r;
  my $mkdn = "";
# Title, Desc from HTML
  my @title = grep { /(title)/ } read_file("$curdir/posts/$_");
  my $title = $title[0] =~ s/(<title>)|(<\/title>)//rg;
  my @descr = grep { /(description)/ } read_file("$curdir/posts/$_");
  my $descr = $descr[0] =~ s/(<meta type="description" content=")|(" \/>)//rg;
  my $head = read_file("$curdir/src/head.html");

  if ($file =~ m/([0-9]{4}-[0-9]{2}-[0-9]{2}-.*)/) {
    $mkdn = read_file("$curdir/posts/posted/$_[0]");
  } else {
  # Adding Date
    my $date = localtime->strftime('%Y-%m-%d');
        $file = "$date-$file";
  # Also Set Markdown File Location
    $mkdn = read_file("$curdir/posts/drafts/$_[0]");
  # Get SEO and Index Title and Description
    print "\nWhat would you like to name it? ";
    $title = <STDIN>;
    print "\nPlease add a brief description: ";
    $descr = <STDIN>;
  }

  $head = $head =~ s/<!--BLOG-TITLE-->/$title/r;
  $head = $head =~ s/<!--BLOG-DESCRIPTION-->/$descr/r;
  my $body = markdown($mkdn);
  my $foot = read_file("$curdir/src/footer.html");

  open(my $fh, '>', "$curdir/posts/$file") or die "Cannot open a new file to convert to HTML";
    print $fh $head;
    print $fh $body;
    print $fh $foot;
  close $fh;

  open(my $fd, '>', "$curdir/posts/posted/$file") or die "Cannot open post content file for some reason";
    print $fd $body;
  close $fd;

  updateindex();
}

sub updateglob {
    my $counter = 0;
    my @post = read_dir("$curdir/posts/posted");
        @post = reverse sort @post;
    foreach (@post) {
      print "Updating post $_\n";
      html2mkdn($_);
    }
}

sub updateindex {
# Blog Info
  my $blogname = "Clog Blog";
  my $blogdescription = "Clog Blog Description Goes HERE!.";
  my $blogimg = "blog.jpg";

# Add Blog Titles and Description to <head>
  my $head = read_file("$curdir/src/head.html");
      $head = $head =~ s/<!--BLOG-TITLE-->/$blogname/r;
      $head = $head =~ s/<!--BLOG-DESCRIPTION-->/$blogdescription/r;
  my $foot = read_file("$curdir/src/footer.html");

# Write to Index File
  open(my $fl, '>', "$curdir/index.html") or die "Cannot open file index.html";
    print $fl $head;
    print $fl "<img src=\"$blogimg\" class=\"head-img\">";
    print $fl "<h1>$blogname</h1>";
    print $fl "<h3 class=\"blog-desc\">$blogdescription</h3>";
  # Get File Array
    my @post = read_dir("$curdir/posts");
        @post = reverse sort @post;
    foreach (@post) {

    # Skip Drafts Folder
      next if ($_ eq "drafts");
      next if ($_ eq "posted");

  # Get Title, Description, Date
    # Title, Desc from HTML
      my @titl = grep { /(title)/ } read_file("$curdir/posts/$_");
      my $ptit = $titl[0] =~ s/(<title>)|(<\/title>)//rg;
      my @desc = grep { /(description)/ } read_file("$curdir/posts/$_");
      my $pdes = $desc[0] =~ s/(<meta type="description" content=")|(" \/>)//rg;

      # Date from the URL
      my @date = split('-', $_);

    # Print HTML
      print $fl "
      <div class=\"index-post\">
        <a href=\"posts/$_\">
          <h2>
            $ptit          </h2>
            <p>
            $pdes              <br /><br />
              Posted $date[2]/$date[1]/$date[0]
            </p>
        </a>
      </div>
      ";
    }
    print $fl $foot;
  close $fl;
}

